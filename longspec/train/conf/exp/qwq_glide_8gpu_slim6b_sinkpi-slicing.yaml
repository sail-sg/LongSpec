defaults:
  - hydra: default
  - deepspeed@ds_cfg: train_hybrid_engine_zero1_optim_offload_cosine
  - _self_  # see here for more details: https://hydra.cc/docs/tutorials/basic/your_first_app/defaults/#composition-order-of-primary-config

hydra:
  searchpath:
    - file://conf/

# ignore
data_path_prefix: 
model_path_prefix: [Your Directory]/models/
output_path_prefix: [Your Directory]/checkpoints/glide/checkpoint/

train_file: [Your Directory]/data/raw_data/SlimPajama-6B/train_data.jsonl
dev_file:
test_file:

torch_dtype:
  _target_: general_util.training_utils.return_torch_dtype
  dtype: bfloat16

eos_token: "<|endoftext|>"
eos_token_id: 151643
tokenizer_init:
  _target_: general_util.tokenization_utils.init_tokenizer
  tokenizer_path: ${model_name_or_path}
  padding_side: right
  pad_token: ${eos_token}

device_map:
  _target_: models.utils.return_single_device_map

model:
  _target_: models.qwen2_glide.Qwen2Glide.from_pretrained
  gradient_checkpointing: False
  attn_implementation: "flash_attention_2"
  ignore_mismatched_sizes: True
  torch_dtype: ${torch_dtype}
  pad_token_id: ${eos_token_id}


read_tensor:
  _target_: data.combine_dataset.MultiMappingDataset
  read_fn:
    _target_: data.input_utils.jsonl_read_fn
    # id_field: idz
    # split: train
  aligner:
    _target_: data.input_aligner.add_id_aligner
    id_field: id
  template:
    _target_: data.input_utils.recompose_template
    units:
      chat_prefix: ""
      pos: "{target}"
      chat_suffix: ${eos_token}
    compositions:
      prompt: ""
      chosen: "{pos}{chat_suffix}"
  instruction: ""
  index_field: id
  kv_mapping:
    chosen: chosen
    id: index
    prompt: prompt


dist_load_data_barrier: False

extended_vocab:

# Data collator
collator:
  _target_: data.general_collator.DPODataSFTCollator
  tokenizer: ${tokenizer_init}
  max_seq_length: 1024

# Dataloader
num_workers: 8
prefetch_factor: 2

model_name: QwQ-32B
model_name_or_path: ${model_path_prefix}/${model_name}/
pretrain:
resume: latest


dp_size:
tp_size: 1
pp_size: 1

wandb_project: long-glide
exp_name: ${model_name}.qwq32b.slim6b.glide.A100.tp1dp1.zero1.v1.0.sinkpi-slicing.liger-ce.s${seed}
exp_notes:
output_dir: ${output_path_prefix}experiments/${exp_name}  # Fix <pad token id>


do_train: True
evaluate_during_training: False

do_eval: False
eval_sub_path: checkpoint-*

# Training hyper-parameters
per_gpu_train_batch_size: 2
per_gpu_eval_batch_size: 2
#learning_rate: 1e-4
learning_rate: 5e-4
#learning_rate: 2e-5
gradient_accumulation_steps: 128
weight_decay: 0.1
adam_epsilon: 1e-6
adam_betas: "(0.9, 0.98)"
#adam_betas: "(0.9, 0.999)"
#max_grad_norm: 0.0
total_dataset_len: -1
max_grad_norm: 1.0
num_train_epochs: 1
max_steps: 0
warmup_proportion: 0.1
warmup_steps: 0

# Lamb Optimizer
optimizer:
use_nvlamb:
bit_training:

logging_steps: 1
save_ds_state: True
save_steps: 200
save_best: False
eval_steps: 200
ddp_eval: True
no_cuda: False
seed: 42
local_rank: -1
fp16: True
fp16_opt_level: O1
fp16_bfloat16: True

# Prediction config
prediction_cfg:
  metric: "loss"
  measure: -1
  best_checkpoint:
  best_result:
eval_forward_fn:
  _target_: general_util.evaluator.DefaultForwardFn
post_process:
  _target_: post_processors.dpo.SFTLossOnlyPostProcessor


ds_cfg:
  train_micro_batch_size_per_gpu: ${per_gpu_train_batch_size}
  gradient_accumulation_steps: ${gradient_accumulation_steps}
  optimizer:
    type: AdamW
    params:
      lr: ${learning_rate}
      betas: [ 0.9, 0.95 ]
      weight_decay: ${weight_decay}
  steps_per_print: 1
  bf16:
    enabled: False
  fp16:
    enabled: True
    auto_cast: False
    loss_scale: 0
    initial_scale_power: 16
    loss_scale_window: 1000
    hysteresis: 2
    consecutive_hysteresis: False
    min_loss_scale: 1
  zero_optimization:
    offload_optimizer:
      device: cpu
      pin_memory: True



summary_helper:
  _target_: general_util.tensorboard_helper.WandbWriter
  batch_index_or_keys:
  outputs_index_or_keys:
    "train/loss": loss
    "train/large_loss": llm_loss
#    "train/chosen_reward": chosen_reward
#    "train/rejected_reward": rejected_reward
#             loss=loss,
            #prefix_loss=prefix_loss,
            #attd_prefix_loss=attend_prefix_loss,
            #attd_gist_loss
# Temporary variables
n_gpu:
device:
train_batch_size:
eval_batch_size:
world_size:
